{"version":3,"sources":["components/Cards/Card.tsx","components/Buttons/Button.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","front","back","clickHandler","id","disabled","showFront","found","cardSize","className","type","onClick","src","alt","Button","text","cardData","shuffle","array","sort","Math","random","MemoryGame","useState","setShowFront","setDisabled","setFound","cards","setCards","difficulty","setDifficulty","buttonClickHandler","num","i","push","sqrt","length","map","index","setTimeout","includes","uuidv4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9113aae7.chunk.js","sourcesContent":["import React, { FC, useEffect, useState } from 'react';\r\nimport './Card.scss';\r\n\r\ntype Props = {\r\n  front: string; // img src\r\n  back: string; // img src\r\n  id: number, // index of each card\r\n  clickHandler: () => void, // onClick function\r\n  disabled: boolean,\r\n  showFront: boolean, \r\n  found: boolean, \r\n  cardSize: number,\r\n};\r\n\r\nconst Card: FC<Props> = ({\r\n  front,\r\n  back,\r\n  id,\r\n  clickHandler,\r\n  disabled,\r\n  showFront,\r\n  found,\r\n  cardSize\r\n}) => {\r\n\r\n  return (\r\n    <div className={`card ${cardSize === 36 && 'card--m'} ${cardSize === 100 && 'card--l'}`}>\r\n      <button\r\n        type=\"button\"\r\n        className=\"button\"\r\n        disabled={found || showFront ? true : disabled}\r\n        onClick={() => clickHandler()}\r\n      >\r\n        ?\r\n      </button>\r\n\r\n      <div className=\"card__image-wrapper\">\r\n        <img className=\"card__image\" src={showFront || found ? front : back} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { FC } from 'react';\r\nimport './Button.scss';\r\n\r\ntype Props = {\r\n  text: string;\r\n  onClick: () => void;\r\n};\r\n\r\nconst Button: FC<Props> = ({ text, onClick }) => {\r\n  return (\r\n    <>\r\n      <button className='buttons' type=\"button\" onClick={onClick}>\r\n        {text}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Card from './components/Cards/Card';\nimport Button from './components/Buttons/Button';\n// import cardData from './data/Data';\nimport './App.css';\nimport 'flexboxgrid';\n\n\nconst cardData: number[] = [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8];\n\nfunction shuffle(array: number[]) {\n  array.sort(() => Math.random() - 0.5);\n}\n\nshuffle(cardData);\n\nconst MemoryGame = () => {\n  const [showFront, setShowFront] = useState<number[]>([]);\n  const [disabled, setDisabled] = useState(false);\n  const [found, setFound] = useState<number[]>([]);\n  const [cards, setCards] = useState<number[]>(cardData);\n  const [difficulty, setDifficulty] = useState<number[]>([]);\n\n\n  const clickHandler = (id: number) => {\n    // @ts-ignore\n    setShowFront((showFront[0] = id));\n    setShowFront([...showFront, id]);\n    if (\n      showFront.length >= 2 &&\n      cards[showFront[0]] === cards[showFront[1]]\n    ) {\n      // @ts-ignore\n      setFound((found[0] = showFront));\n      setFound([...found, ...showFront]);\n      setShowFront([]);\n    } else if (showFront.length >= 2) {\n      setDisabled(true);\n      setTimeout(() => {\n        setDisabled(false);\n        setShowFront([]);\n      }, 1000);\n    }\n  };\n\n  const buttonClickHandler = (num:number) => {\n    setFound([]);\n    setDifficulty([]);\n    for (let i = 0; i < num*num/2; i++){\n      difficulty.push(i);\n      difficulty.push(i);\n    }\n    shuffle(difficulty);\n    setCards(difficulty);\n\n  };\n\n  return (\n    <div className='app'>\n      <div className=\"container container-fluid\">\n        <div className=\"row center-xs\">\n          <div className=\"col-xs-12\">\n            <h1>Memory Game</h1>\n            <Button text='easy [4x4]' onClick={() => buttonClickHandler(4)} />\n            <Button text='medium [6x6]' onClick={() => buttonClickHandler(6)} />\n            <Button text='hard [10x10]' onClick={() => buttonClickHandler(10)} />\n            <Button text='reset' onClick={() => buttonClickHandler(Math.sqrt(cards.length))} />\n         \n          </div>\n        </div>\n        <div className=\"row center-xs\">\n          <div className={`col-xs-12 flex layout ${cards.length === 16 && 'layout--s'} ${cards.length === 36 ? 'layout--m' : 'layout--l'}`}>\n            {cards.map((i, index) => {\n              return (\n                <div key={uuidv4()}>\n                  <Card\n                    id={index}\n                    front={`https://robohash.org/${i}`}\n                    back=\"https://picsum.photos/id/1002/300/300\"\n                    clickHandler={() => clickHandler(index)}\n                    disabled={disabled}\n                    showFront={showFront.includes(index)}\n                    found={found.includes(index)}\n                    cardSize={cards.length}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MemoryGame;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}